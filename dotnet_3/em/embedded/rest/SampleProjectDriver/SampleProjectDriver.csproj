<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <AssemblyName>sampleproject-evomaster-runner</AssemblyName>
    </PropertyGroup>

    <Import Project="../../../common.props" />
    
    <ItemGroup>
        <ProjectReference Include="../../../../cs/rest/SampleProject/src/SampleProject.API/SampleProject.API.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="DotNet.Testcontainers" Version="1.4.0"/>
    </ItemGroup>

    <Target Name="appsettings" AfterTargets="AfterBuild">
        <Copy SourceFiles="../../../../cs/rest/SampleProject/src/SampleProject.API/appsettings.json" DestinationFolder="$(OutDir)"/>
    </Target>

    <Target Name="PostClean" AfterTargets="Clean">
        <RemoveDir Directories="generated" />
        <RemoveDir Directories="bin-temp" />
    </Target>
    
    <ItemGroup>
        <!-- You may only need to modify values for these three items based on the project names -->
        <Sut Include="SampleProject.API.dll"/>
        <!--Do not change the \ to / as it may lead to error on Windows, just change the substring after the \-->
        <SutPath Include="$(ProjectDir)bin-temp\SampleProject.API.dll"/>

        <Application Include="SampleProject.Application.dll"/>
        <ApplicationPath Include="$(ProjectDir)bin-temp\SampleProject.Application.dll"/>

        <Domain Include="SampleProject.Domain.dll"/>
        <DomainPath Include="$(ProjectDir)bin-temp\SampleProject.Domain.dll"/>

        <Infrastructure Include="SampleProject.Infrastructure.dll"/>
        <InfrastructurePath Include="$(ProjectDir)bin-temp\SampleProject.Infrastructure.dll"/>
        
        <CurrentRuntimeConfig Include="$(OutputPath)sampleproject-evomaster-runner.runtimeconfig.json"/>

        <!-- Don't need to touch these two lines -->
        <TempDirectory Include="$(ProjectDir)bin-temp"/>
        <InstrumentationRuntimeConfig Include="$(OutputPath)EvoMaster.Instrumentation.runtimeconfig.json"/>
    </ItemGroup>

    <Target Name="Instrument" AfterTargets="Build">

        <!-- Remove temp folder in case it exists to make sure everything gets updated -->
        <RemoveDir Directories="@(TempDirectory)"/>
        <MakeDir Directories="@(TempDirectory)"/>

        <!-- create a runtimeconfig.json because it is needed for EvoMaster.Instrumentation.dll to be runnable -->
        <Copy SourceFiles="@(CurrentRuntimeConfig)" DestinationFiles="@(InstrumentationRuntimeConfig)"/>

        <!-- Run the instrumentation and specify bin-temp as output directory -->
        <Exec Command="cd $(OutputPath)
			  dotnet EvoMaster.Instrumentation.dll @(Sut) @(TempDirectory)"/>

        <Exec Command="cd $(OutputPath)
			  dotnet EvoMaster.Instrumentation.dll @(Application) @(TempDirectory)"/>

        <Exec Command="cd $(OutputPath)
			  dotnet EvoMaster.Instrumentation.dll @(Domain) @(TempDirectory)"/>

        <Exec Command="cd $(OutputPath)
			  dotnet EvoMaster.Instrumentation.dll @(Infrastructure) @(TempDirectory)"/>

    </Target>


    <!--This section is for enabling the test methods pass. The actual instrumentation is done before
        The instrumented dll is copied into the bin folder and replaces the actual sut
    -->
    <Target Name="TestInstrumentation" AfterTargets="Build">

        <Exec Command="cp @(SutPath) $(OutputPath)" Condition="$(OS.Contains('Unix'))"/>
        <Exec Command="copy @(SutPath) $(OutputPath)" Condition="$(OS.Contains('Windows'))"/>

        <Exec Command="cp @(ApplicationPath) $(OutputPath)" Condition="$(OS.Contains('Unix'))"/>
        <Exec Command="copy @(ApplicationPath) $(OutputPath)" Condition="$(OS.Contains('Windows'))"/>

        <Exec Command="cp @(DomainPath) $(OutputPath)" Condition="$(OS.Contains('Unix'))"/>
        <Exec Command="copy @(DomainPath) $(OutputPath)" Condition="$(OS.Contains('Windows'))"/>

        <Exec Command="cp @(InfrastructurePath) $(OutputPath)" Condition="$(OS.Contains('Unix'))"/>
        <Exec Command="copy @(InfrastructurePath) $(OutputPath)" Condition="$(OS.Contains('Windows'))"/>
    </Target>

</Project>
